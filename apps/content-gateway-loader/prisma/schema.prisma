datasource db {
  provider = "postgresql"
  url      = env("PG_CGL_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filterJson", "interactiveTransactions"]
  output          = "../../../node_modules/@cgl/prisma"
}

/// Contains scheduling metadata for a job
model JobSchedule {
  name             String    @id @db.VarChar(255)
  state            JobState  @default(SCHEDULED)
  /// The cursor that points to the last data entry that was saved.
  /// This can be anything that supports order by
  cursor           String    @db.VarChar(255)
  /// The amount of items to load in the next run
  limit            Int       @db.Integer
  /// The next time this job should run
  scheduledAt      DateTime  @default(now()) @db.Timestamp(6)
  /// The previous time this job was run
  ranPreviouslyAt  DateTime? @db.Timestamp(6)
  /// The number of times this job has failed in a row
  currentFailCount Int       @default(0) @db.Integer
  /// The last time this job ran
  updatedAt        DateTime  @db.Timestamp(6)
  log              JobLog[]

  @@index([scheduledAt])
  @@index([cursor])
  @@index([state])
}

/// Represents a change in the state of a job
model JobLog {
  id        String      @id @default(uuid())
  name      String      @db.VarChar(255)
  /// Free form log message
  log       String      @db.Text
  state     JobState
  job       JobSchedule @relation(fields: [name], references: [name])
  createdAt DateTime    @default(now()) @db.Timestamp(6)

  @@index([name])
}

enum JobState {
  SCHEDULED
  CANCELED
  RUNNING
  COMPLETED
  FAILED
}
